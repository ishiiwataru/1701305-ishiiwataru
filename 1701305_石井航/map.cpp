#include <DxLib.h>
#include "map.h"

int imgMap[40];

int MapData[30][32] =
{
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},

	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},

	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},

	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},

	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,},
	{12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,},
	{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,},
	{20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,},

};

void MapSystemInit()
{
	int tmp = LoadGraph("image/mapImage.png");

	// 水面
	imgMap[0] = DerivationGraph(64 + 16 , 48, 16, 16, tmp);
	imgMap[1] = DerivationGraph(64 + 16 , 48, 16, 16, tmp);
	imgMap[2] = DerivationGraph(64 + 16 , 48, 16, 16, tmp);
	imgMap[3] = DerivationGraph(64 + 16 , 48, 16, 16, tmp);

	// 水面2
	imgMap[4] = DerivationGraph(64 + 16 , 64, 16, 16, tmp);
	imgMap[5] = DerivationGraph(64 + 16 , 64, 16, 16, tmp);
	imgMap[6] = DerivationGraph(64 + 16 , 64, 16, 16, tmp);
	imgMap[7] = DerivationGraph(64 + 16 , 64, 16, 16, tmp);

	// 水面3
	imgMap[8] = DerivationGraph(64 + 16 , 80, 16, 16, tmp);
	imgMap[9] = DerivationGraph(64 + 16 , 80, 16, 16, tmp);
	imgMap[10] = DerivationGraph(64 + 16, 80, 16, 16, tmp);
	imgMap[11] = DerivationGraph(64 + 16, 80, 16, 16, tmp);

	// 島1
	imgMap[12] = DerivationGraph(64 + 16, 0, 16, 16, tmp);
	imgMap[13] = DerivationGraph(64 + 16, 0, 16, 16, tmp);
	imgMap[14] = DerivationGraph(64 + 16, 0, 16, 16, tmp);
	imgMap[15] = DerivationGraph(64 + 16, 0, 16, 16, tmp);

	// 島2
	imgMap[16] = DerivationGraph(64 + 16, 16, 16, 16, tmp);
	imgMap[17] = DerivationGraph(64 + 16, 16, 16, 16, tmp);
	imgMap[18] = DerivationGraph(64 + 16, 16, 16, 16, tmp);
	imgMap[19] = DerivationGraph(64 + 16, 16, 16, 16, tmp);

	// 島3
	imgMap[20] = DerivationGraph(64 + 16 ,32, 16, 16, tmp);
	imgMap[21] = DerivationGraph(64 + 16 ,32, 16, 16, tmp);
	imgMap[22] = DerivationGraph(64 + 16 ,32, 16, 16, tmp);
	imgMap[23] = DerivationGraph(64 + 16 ,32, 16, 16, tmp);

	// 浮島
	imgMap[24] = DerivationGraph(128 + 16, 0, 16, 16, tmp);
	imgMap[25] = DerivationGraph(128 + 16, 0, 16, 16, tmp);
	imgMap[26] = DerivationGraph(128 + 16, 0, 16, 16, tmp);
	imgMap[27] = DerivationGraph(128 + 16, 0, 16, 16, tmp);

	// 得点エリア1
	imgMap[28] = DerivationGraph(0 + 16, 48, 16, 16, tmp);
	imgMap[29] = DerivationGraph(0 + 16, 48, 16, 16, tmp);
	imgMap[30] = DerivationGraph(0 + 16, 48, 16, 16, tmp);
	imgMap[31] = DerivationGraph(0 + 16, 48, 16, 16, tmp);

	// 得点エリア2
	imgMap[32] = DerivationGraph(0 + 16, 64, 16, 16, tmp);
	imgMap[33] = DerivationGraph(0 + 16, 64, 16, 16, tmp);
	imgMap[34] = DerivationGraph(0 + 16, 64, 16, 16, tmp);
	imgMap[35] = DerivationGraph(0 + 16, 64, 16, 16, tmp);

	// 得点エリア3
	imgMap[36] = DerivationGraph(0 + 16, 80, 16, 16, tmp);
	imgMap[37] = DerivationGraph(0 + 16, 80, 16, 16, tmp);
	imgMap[38] = DerivationGraph(0 + 16, 80, 16, 16, tmp);
	imgMap[39] = DerivationGraph(0 + 16, 80, 16, 16, tmp);

	

}

void MapDraw()
{
	for (int y = 0; y < 30; y++)
	{
		for (int x = 0; x < 32; x++)
		{
			DrawGraph(x * 16, y * 16, imgMap[MapData[y][x]], true);
		}
	}
}